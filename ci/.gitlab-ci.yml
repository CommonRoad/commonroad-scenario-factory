stages:
  - linting
  - testing
  - deploy

variables:  # Change pip's cache directory to be inside the project directory since we can only cache local items.
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: python:3.10
  before_script: &default_before_script
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
  cache:
    paths:
      # Cache the poetry installation for all jobs.
      # We could also cache all project dependencies, but the up-/download of the cache takes longer than installing only the relevant dependencies in each job.
      - .cache/pip

pre_commit:
  stage: linting
  before_script:
    - *default_before_script
    - poetry install --only dev
  script:
    - poetry run pre-commit run --all-files --show-diff-on-failure

main_testing:
  stage: testing
  before_script:
    - *default_before_script
    - apt-get update && apt-get install osmium-tool openjdk-17-jre-headless libgl1 libegl1 libxkbcommon0  -y
    - poetry install --with tests
  script:
    - poetry run coverage run -m pytest
    - poetry run coverage report -m || true
    - poetry run coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

pages:
  # push the latest documentation of the main branch to the Gitlab pages.
  # available at https://cps.pages.gitlab.lrz.de/commonroad/scenario-factory
  stage: deploy
  only:
    - develop
  publish: site
  before_script:
    - *default_before_script
    - poetry install --only docs
  script:
    - poetry run mkdocs build
  artifacts:
    paths:
      - site
  environment:
    name: Gitlab Pages
    url: https://cps.pages.gitlab.lrz.de/commonroad/scenario-factory
