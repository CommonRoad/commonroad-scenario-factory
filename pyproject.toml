[project]
name = "commonroad-scenario-factory"
version = "0.1.0"
description = "Automated scenario generation for CommonRoad based on SUMO traffic simulations."
authors = [{name = "Florian Finkeldei", email = "florian.finkeldei@tum.de"}]
requires-python = ">=3.10"
readme = "README.md"
dynamic = ["dependencies"]

[tool.poetry]
packages = [{include = "scenario_factory"}]

[[tool.poetry.source]]
name = "test"
url = "https://test.pypi.org/simple/"
priority = "explicit"

[tool.poetry.dependencies]
python = "~3.10" # Constraint is given by commonroad-labeling
commonroad-io = { git = "https://github.com/CommonRoad/commonroad-io.git", rev = "a0577190e8e9df3abe2dd097179484037e1e79e0"}
commonroad-drivability-checker = "^2024.1"
commonroad-scenario-designer = { git = "https://github.com/CommonRoad/commonroad-scenario-designer", rev="5e8a17500e0d5cf3996bb6904876cb468e1ddb15"}
commonroad-labeling = { git = "git@gitlab.lrz.de:cps/commonroad/automatic-scenario-labeling.git", rev="64985b953da3fdc3a0c3046a64478a040ff17bf1"}
opentrafficsim = { version = "1.7.5", source = "test" }
crots = { git = "git@gitlab.lrz.de:cps/commonroad/cr-ots-interface.git", rev = "be47509ebbda0a225d1faa0de2e32d4f68109873"}
sumocr = { git = "git@gitlab.lrz.de:cps/sumo-interface.git", rev = "df917cd701f0e0cda542a0d87eea9c8eb000c400"}
commonroad-route-planner = ">=2024.2.0,<2025.0"
commonroad-reactive-planner = "^2024.1"
osmium = ">=2.16.0"
iso3166 = "^2.0"
libsumo = "^1.19"
scikit-learn = "^1.3"
eclipse-sumo = "^1.19"
click = "^8.1"
multiprocess = "^0.70"
typing-extensions = "^4.12.2"


[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "^7.4.4"
pytest-mock = "^3.14.0"
coverage = {version = "^7.5.3", extras = ["toml"] }
pydantic = "^2.10.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
mkdocstrings-python = "^1.10.3"
mkdocs-autorefs = "^1.0.1"
mkdocs-material = "^9.5.12"
mkdocs-click = "^0.8.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
indent-width = 4
format.quote-style = "double"
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "I", "F"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.coverage.run]
source = ["scenario_factory"]

[[tool.mypy.overrides]]
module = "scenario_factory.scenario_features.*"
ignore_errors = true

[project.scripts]
scenario-factory = "scripts.cli:generate"
globetrotter = "scripts.cli:globetrotter"
